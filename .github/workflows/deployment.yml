name: Deploy website
on:
  push:
    branches:
      - main
      - dev
env:
    MONGODB_DB_NAME: ${{ secrets.MONGODB_DB_NAME }}
    MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
    MONGODB_CLUSTER_ADDRESS: ${{ secrets.MONGODB_CLUSTER_ADDRESS }}
    MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
    PORT: ${{ secrets.PORT }}
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run server
        run: npm run ci-start && npx wait-on http://127.0.0.1:${{env.PORT}} -t=3000
      - name: Test code
        run: npm run test
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: ${{  env.MONGODB_USERNAME  }}"
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Publish js filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get artifact
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output
        run: ls
      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy
        run: echo "Deploying..."
